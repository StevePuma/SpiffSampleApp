import{r as s,c as t,h as i,g as e}from"./p-c1d35007.js";import{d as a}from"./p-6cbd9e3a.js";import{c as n}from"./p-5be7e115.js";const o=class{constructor(i){s(this,i),this.filtersChanged=t(this,"filtersChanged",3),this.refreshed=t(this,"refreshed",3),this.loaded=t(this,"loaded",3),this.oid=void 0}async loadDashboard(){const s=await n.withNearestContext(this,"sisense-app",(s=>{if(this.oid)return s.dashboards.load(this.oid);const t=new window.Dashboard;return this.datasource&&(t.datasource=this.datasource),s.dashboards.add(t),t}));s&&(s.debouncedRefresh=a(s.refresh.bind(s),1e3),s.on("filterschanged",((s,{items:t,type:i})=>{this.filtersChanged.emit({items:t,type:i})})),s.on("refreshend",(()=>{this.refreshed.emit()})),this.dashboardContext=s,this.loaded.emit())}async _getContext(){return this.dashboardContext?this.dashboardContext:new Promise((s=>{this.el.addEventListener("loaded",(()=>{s(this.dashboardContext)}),{once:!0})}))}async getModel(){var s,t;const i=await this._getContext(),e=null==i?void 0:i.$$model;return e&&Object.freeze({filters:null===(s=e.filters)||void 0===s?void 0:s.$$items,widgets:null===(t=e.widgets)||void 0===t?void 0:t.$$widgets,oid:e.oid,title:e.title,description:e.description,instanceType:e.instanceType,owner:e.owner,userId:e.userId,datasource:e.datasource,defaultFilters:e.defaultFilters})}async applyFilters(s){const t=await this._getContext();s.forEach((s=>{var i,e;null===(e=null===(i=null==t?void 0:t.$$model)||void 0===i?void 0:i.filters)||void 0===e||e.update({jaql:s},{save:!1})})),t.debouncedRefresh()}async removeFilters(s){const t=await this._getContext();s.forEach((s=>{var i,e;s.dim&&(null===(e=null===(i=null==t?void 0:t.$$model)||void 0===i?void 0:i.filters)||void 0===e||e.remove(s.dim))})),t.debouncedRefresh()}async clearFilters(){var s,t;const i=await this._getContext();null===(t=null===(s=null==i?void 0:i.$$model)||void 0===s?void 0:s.filters)||void 0===t||t.clear(),i.debouncedRefresh()}connectedCallback(){n.register(this),this.loadDashboard()}disconnectedCallback(){n.unregister(this)}async refresh(){(await this._getContext()).debouncedRefresh()}render(){return i("slot",null)}get el(){return e(this)}};export{o as sisense_dashboard}